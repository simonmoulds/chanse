// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// gwmodel
List gwmodel(double prec, double reference_crop_ET, double et_depletion_factor, double rooting_depth, double H_init, double root_zone_depletion_init, double f1, double c1, double well_depth, double max_well_depth, bool farmer_canal_access, double farm_area, double surface_elev, double return_flow_coef, double irrigation_eff, double canal_volume, double canal_leakage_coef, double field_capacity, double wilting_point, double runoff_coef, double Ks_max, double Ks_min, double evaporation_loss_coef);
RcppExport SEXP _chanse_gwmodel(SEXP precSEXP, SEXP reference_crop_ETSEXP, SEXP et_depletion_factorSEXP, SEXP rooting_depthSEXP, SEXP H_initSEXP, SEXP root_zone_depletion_initSEXP, SEXP f1SEXP, SEXP c1SEXP, SEXP well_depthSEXP, SEXP max_well_depthSEXP, SEXP farmer_canal_accessSEXP, SEXP farm_areaSEXP, SEXP surface_elevSEXP, SEXP return_flow_coefSEXP, SEXP irrigation_effSEXP, SEXP canal_volumeSEXP, SEXP canal_leakage_coefSEXP, SEXP field_capacitySEXP, SEXP wilting_pointSEXP, SEXP runoff_coefSEXP, SEXP Ks_maxSEXP, SEXP Ks_minSEXP, SEXP evaporation_loss_coefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type prec(precSEXP);
    Rcpp::traits::input_parameter< double >::type reference_crop_ET(reference_crop_ETSEXP);
    Rcpp::traits::input_parameter< double >::type et_depletion_factor(et_depletion_factorSEXP);
    Rcpp::traits::input_parameter< double >::type rooting_depth(rooting_depthSEXP);
    Rcpp::traits::input_parameter< double >::type H_init(H_initSEXP);
    Rcpp::traits::input_parameter< double >::type root_zone_depletion_init(root_zone_depletion_initSEXP);
    Rcpp::traits::input_parameter< double >::type f1(f1SEXP);
    Rcpp::traits::input_parameter< double >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< double >::type well_depth(well_depthSEXP);
    Rcpp::traits::input_parameter< double >::type max_well_depth(max_well_depthSEXP);
    Rcpp::traits::input_parameter< bool >::type farmer_canal_access(farmer_canal_accessSEXP);
    Rcpp::traits::input_parameter< double >::type farm_area(farm_areaSEXP);
    Rcpp::traits::input_parameter< double >::type surface_elev(surface_elevSEXP);
    Rcpp::traits::input_parameter< double >::type return_flow_coef(return_flow_coefSEXP);
    Rcpp::traits::input_parameter< double >::type irrigation_eff(irrigation_effSEXP);
    Rcpp::traits::input_parameter< double >::type canal_volume(canal_volumeSEXP);
    Rcpp::traits::input_parameter< double >::type canal_leakage_coef(canal_leakage_coefSEXP);
    Rcpp::traits::input_parameter< double >::type field_capacity(field_capacitySEXP);
    Rcpp::traits::input_parameter< double >::type wilting_point(wilting_pointSEXP);
    Rcpp::traits::input_parameter< double >::type runoff_coef(runoff_coefSEXP);
    Rcpp::traits::input_parameter< double >::type Ks_max(Ks_maxSEXP);
    Rcpp::traits::input_parameter< double >::type Ks_min(Ks_minSEXP);
    Rcpp::traits::input_parameter< double >::type evaporation_loss_coef(evaporation_loss_coefSEXP);
    rcpp_result_gen = Rcpp::wrap(gwmodel(prec, reference_crop_ET, et_depletion_factor, rooting_depth, H_init, root_zone_depletion_init, f1, c1, well_depth, max_well_depth, farmer_canal_access, farm_area, surface_elev, return_flow_coef, irrigation_eff, canal_volume, canal_leakage_coef, field_capacity, wilting_point, runoff_coef, Ks_max, Ks_min, evaporation_loss_coef));
    return rcpp_result_gen;
END_RCPP
}
// model
List model(NumericVector prec, double rain_rand, NumericVector reference_ET, IntegerVector day, IntegerVector year, IntegerVector month, NumericVector Kc, NumericVector et_depletion_factor, NumericVector rooting_depth, NumericVector diesel_price, NumericVector rice_price_per_t, NumericVector wheat_price_per_t, NumericVector rice_yield, NumericVector wheat_yield, double rice_yield_coeff, double wheat_yield_coeff, IntegerMatrix wheat_irr_schedule, IntegerMatrix wheat_can_irr_schedule, IntegerMatrix rice_irr_schedule, IntegerMatrix rice_can_irr_schedule, IntegerVector wheat_months, IntegerVector rice_months, double wheat_min, double wheat_max, double rice_min, double rice_max, double Ky_wheat, double Ky_rice, NumericMatrix fertiliser_price, NumericMatrix fertiliser_app_rate, LogicalVector farmer_canal_access, IntegerVector init_farmer_category, NumericVector well_depth, double max_well_depth, NumericVector well_cost, double initial_H, double Sy, double initial_root_zone_depletion, int harvest_day, int n_year, int n_day, int n_crop, int n_farmer, double region_area, double farm_area, double surface_elev, double return_flow_coef, double irrigation_eff, double canal_volume, double canal_leakage_coef, double field_capacity, double wilting_point, double runoff_coef, double Ks_max, double Ks_min, double evaporation_loss_coef, double fuel_eff, double saving_percentage, int saving_lower, int saving_upper);
RcppExport SEXP _chanse_model(SEXP precSEXP, SEXP rain_randSEXP, SEXP reference_ETSEXP, SEXP daySEXP, SEXP yearSEXP, SEXP monthSEXP, SEXP KcSEXP, SEXP et_depletion_factorSEXP, SEXP rooting_depthSEXP, SEXP diesel_priceSEXP, SEXP rice_price_per_tSEXP, SEXP wheat_price_per_tSEXP, SEXP rice_yieldSEXP, SEXP wheat_yieldSEXP, SEXP rice_yield_coeffSEXP, SEXP wheat_yield_coeffSEXP, SEXP wheat_irr_scheduleSEXP, SEXP wheat_can_irr_scheduleSEXP, SEXP rice_irr_scheduleSEXP, SEXP rice_can_irr_scheduleSEXP, SEXP wheat_monthsSEXP, SEXP rice_monthsSEXP, SEXP wheat_minSEXP, SEXP wheat_maxSEXP, SEXP rice_minSEXP, SEXP rice_maxSEXP, SEXP Ky_wheatSEXP, SEXP Ky_riceSEXP, SEXP fertiliser_priceSEXP, SEXP fertiliser_app_rateSEXP, SEXP farmer_canal_accessSEXP, SEXP init_farmer_categorySEXP, SEXP well_depthSEXP, SEXP max_well_depthSEXP, SEXP well_costSEXP, SEXP initial_HSEXP, SEXP SySEXP, SEXP initial_root_zone_depletionSEXP, SEXP harvest_daySEXP, SEXP n_yearSEXP, SEXP n_daySEXP, SEXP n_cropSEXP, SEXP n_farmerSEXP, SEXP region_areaSEXP, SEXP farm_areaSEXP, SEXP surface_elevSEXP, SEXP return_flow_coefSEXP, SEXP irrigation_effSEXP, SEXP canal_volumeSEXP, SEXP canal_leakage_coefSEXP, SEXP field_capacitySEXP, SEXP wilting_pointSEXP, SEXP runoff_coefSEXP, SEXP Ks_maxSEXP, SEXP Ks_minSEXP, SEXP evaporation_loss_coefSEXP, SEXP fuel_effSEXP, SEXP saving_percentageSEXP, SEXP saving_lowerSEXP, SEXP saving_upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type prec(precSEXP);
    Rcpp::traits::input_parameter< double >::type rain_rand(rain_randSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type reference_ET(reference_ETSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type day(daySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type year(yearSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type month(monthSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Kc(KcSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type et_depletion_factor(et_depletion_factorSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rooting_depth(rooting_depthSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type diesel_price(diesel_priceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rice_price_per_t(rice_price_per_tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wheat_price_per_t(wheat_price_per_tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rice_yield(rice_yieldSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wheat_yield(wheat_yieldSEXP);
    Rcpp::traits::input_parameter< double >::type rice_yield_coeff(rice_yield_coeffSEXP);
    Rcpp::traits::input_parameter< double >::type wheat_yield_coeff(wheat_yield_coeffSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type wheat_irr_schedule(wheat_irr_scheduleSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type wheat_can_irr_schedule(wheat_can_irr_scheduleSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type rice_irr_schedule(rice_irr_scheduleSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type rice_can_irr_schedule(rice_can_irr_scheduleSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type wheat_months(wheat_monthsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rice_months(rice_monthsSEXP);
    Rcpp::traits::input_parameter< double >::type wheat_min(wheat_minSEXP);
    Rcpp::traits::input_parameter< double >::type wheat_max(wheat_maxSEXP);
    Rcpp::traits::input_parameter< double >::type rice_min(rice_minSEXP);
    Rcpp::traits::input_parameter< double >::type rice_max(rice_maxSEXP);
    Rcpp::traits::input_parameter< double >::type Ky_wheat(Ky_wheatSEXP);
    Rcpp::traits::input_parameter< double >::type Ky_rice(Ky_riceSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fertiliser_price(fertiliser_priceSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fertiliser_app_rate(fertiliser_app_rateSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type farmer_canal_access(farmer_canal_accessSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type init_farmer_category(init_farmer_categorySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type well_depth(well_depthSEXP);
    Rcpp::traits::input_parameter< double >::type max_well_depth(max_well_depthSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type well_cost(well_costSEXP);
    Rcpp::traits::input_parameter< double >::type initial_H(initial_HSEXP);
    Rcpp::traits::input_parameter< double >::type Sy(SySEXP);
    Rcpp::traits::input_parameter< double >::type initial_root_zone_depletion(initial_root_zone_depletionSEXP);
    Rcpp::traits::input_parameter< int >::type harvest_day(harvest_daySEXP);
    Rcpp::traits::input_parameter< int >::type n_year(n_yearSEXP);
    Rcpp::traits::input_parameter< int >::type n_day(n_daySEXP);
    Rcpp::traits::input_parameter< int >::type n_crop(n_cropSEXP);
    Rcpp::traits::input_parameter< int >::type n_farmer(n_farmerSEXP);
    Rcpp::traits::input_parameter< double >::type region_area(region_areaSEXP);
    Rcpp::traits::input_parameter< double >::type farm_area(farm_areaSEXP);
    Rcpp::traits::input_parameter< double >::type surface_elev(surface_elevSEXP);
    Rcpp::traits::input_parameter< double >::type return_flow_coef(return_flow_coefSEXP);
    Rcpp::traits::input_parameter< double >::type irrigation_eff(irrigation_effSEXP);
    Rcpp::traits::input_parameter< double >::type canal_volume(canal_volumeSEXP);
    Rcpp::traits::input_parameter< double >::type canal_leakage_coef(canal_leakage_coefSEXP);
    Rcpp::traits::input_parameter< double >::type field_capacity(field_capacitySEXP);
    Rcpp::traits::input_parameter< double >::type wilting_point(wilting_pointSEXP);
    Rcpp::traits::input_parameter< double >::type runoff_coef(runoff_coefSEXP);
    Rcpp::traits::input_parameter< double >::type Ks_max(Ks_maxSEXP);
    Rcpp::traits::input_parameter< double >::type Ks_min(Ks_minSEXP);
    Rcpp::traits::input_parameter< double >::type evaporation_loss_coef(evaporation_loss_coefSEXP);
    Rcpp::traits::input_parameter< double >::type fuel_eff(fuel_effSEXP);
    Rcpp::traits::input_parameter< double >::type saving_percentage(saving_percentageSEXP);
    Rcpp::traits::input_parameter< int >::type saving_lower(saving_lowerSEXP);
    Rcpp::traits::input_parameter< int >::type saving_upper(saving_upperSEXP);
    rcpp_result_gen = Rcpp::wrap(model(prec, rain_rand, reference_ET, day, year, month, Kc, et_depletion_factor, rooting_depth, diesel_price, rice_price_per_t, wheat_price_per_t, rice_yield, wheat_yield, rice_yield_coeff, wheat_yield_coeff, wheat_irr_schedule, wheat_can_irr_schedule, rice_irr_schedule, rice_can_irr_schedule, wheat_months, rice_months, wheat_min, wheat_max, rice_min, rice_max, Ky_wheat, Ky_rice, fertiliser_price, fertiliser_app_rate, farmer_canal_access, init_farmer_category, well_depth, max_well_depth, well_cost, initial_H, Sy, initial_root_zone_depletion, harvest_day, n_year, n_day, n_crop, n_farmer, region_area, farm_area, surface_elev, return_flow_coef, irrigation_eff, canal_volume, canal_leakage_coef, field_capacity, wilting_point, runoff_coef, Ks_max, Ks_min, evaporation_loss_coef, fuel_eff, saving_percentage, saving_lower, saving_upper));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_chanse_gwmodel", (DL_FUNC) &_chanse_gwmodel, 23},
    {"_chanse_model", (DL_FUNC) &_chanse_model, 60},
    {NULL, NULL, 0}
};

RcppExport void R_init_chanse(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
